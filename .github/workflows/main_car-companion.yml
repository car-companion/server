# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: 'Test, build and deploy Python app to Azure Web App: car-companion'

on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main
  workflow_dispatch:

jobs:
  test-build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python version
      uses: actions/setup-python@v1
      with:
        python-version: '3.12'
    
    - name: Install poetry
      uses: abatilo/actions-poetry@v2
    
    - name: Make Oryx happy with requirements.txt
      working-directory: ${{ inputs.function_directory }}
      run: |
        poetry export --without-hashes --format=requirements.txt > requirements.txt

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests with coverage
      env:
        ALLOWED_HOSTS: "127.0.0.1,localhost"
        CSRF_TRUSTED_ORIGINS: "http://127.0.0.1,http://localhost"
        DEBUG: "True"
        DB_ENGINE: "django.db.backends.postgresql"
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_USER: ${{ secrets.DB_USER }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
      run: |
        coverage run manage.py test
        coverage report

    - name: Deploy to Azure Web App (only on push, not PR)
      if: github.event_name != 'pull_request'
      uses: azure/webapps-deploy@v2
      with: 
        app-name: 'car-companion'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_Main }}

    - name: Run Health Check (only on push, not PR)
      if: github.event_name != 'pull_request'
      run: |
        status_code=$(curl -s -o /dev/null -w "%{http_code}" https://car-companion.azurewebsites.net/health/?format=json)
        if [ "$status_code" -ne 200 ]; then
          echo "Health check failed with status $status_code"
          exit 1
        fi